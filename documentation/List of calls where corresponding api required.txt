app\controllers
blog_controller.rb
            article_got = BlogArticle.only([:article_id, :comments, :title]).where({:article_id => customer_details['article_id']}).to_a[0]
            BlogArticle.where({:article_id => customer_details['article_id']}).update({:comments => comment_history})
...e, :group_name, :group_id, :article_id]).where({:article_id => article_id, :group_id => group_id, :is_visible => true}).to_a[0]...
        result_data['data']['article_group'] = BlogGroup.only([:tag_line, :thumbnail_img, :title, :group_name, :group_id]).where({:group_id => group_id}).to_a[0]
        result_data['data']['group_details'] = BlogGroup.only([:date_of_create, :banner_img, :thumbnail_img, :title, :tag_line, :group_name, :group_id]).where({:group_id => group_id}).to_a[0]
...e, :group_name, :group_id, :article_id]).where({:group_id => group_id, :is_visible => true}).to_a...
...e, :group_name, :group_id, :article_id]).where({:is_visible => true}).to_a...
chat_controller.rb
          Chat.where(:chat_id => @chat_id).set({"msg_history.#{chat[:msg_history].length}" => msg_hash})
filters_controller.rb
...er_master = SaltFilterMenu.only([:name]).where({:$and => [{:master_group => {:$ne => 'base'}}, {:master_group => {:$ne => 'collection'}}, {:...
..., filter_call]).order(params['sort_by']).where({:$and => [{:category => "outerwear"}, {:is_sale => false}, {:is_visible => true}]}).to_a...
..., filter_call]).order('created_at desc').where({:$and => [{:category => "outerwear"}, {:is_sale => false}, {:is_visible => true}]}).to_a...
..., filter_call]).order(params['sort_by']).where({:$and => [{:$or => [{:category => "skirts"}, {:category => "pants"}]}, {:fabric_codes => fab...
..., filter_call]).order('created_at desc').where({:$and => [{:$or => [{:category => "skirts"}, {:category => "pants"}]}, {:fabric_codes => fab...
            products_got = Products.only([:old_product_id, :asset_id, :name, :tag_line, :price, filter_call]).order(params['sort_by']).where({:$and => query_and}).to_a
            products_got = Products.only([:old_product_id, :asset_id, :name, :tag_line, :price, filter_call]).order('created_at desc').where({:$and => query_and}).to_a
..., filter_call]).order(params['sort_by']).where(:$and => [{'filter-category' => {:$exists => true}}, {:is_visible => true}, {:cate_visible =>...
..., filter_call]).order('created_at desc').where(:$and => [{'filter-category' => {:$exists => true}}, {:is_visible => true}, {:cate_visible =>...
          filter_count["color-multi"] = Products.where({:$and => query_and}).count.to_i
          # filter_count["color-multi"] = Products.where({:$and => query_and}).count.to_i
      fabric_all = FabricCodes.only([:fabric_code, :prod_color]).where({}).to_a
      product_all = Products.only([:old_product_id, :fabric_codes]).where({}).to_a
              # Products.where({:old_product_id => prod[:old_product_id]}).update({"filter-color" => fabric_hash[prod[:fabric_codes][0]].to_s.downcase.gsub(' ','-').gsub(',','-')})
      all_products = Products.only([:old_product_id, :tags, :is_sale, :multi_color, :is_visible, :cate_visible, :coll_visible]).where({}).to_a
        get_filter = SaltFilter.where(:tag_name => k.to_s.downcase)
        filter_menu_get = SaltFilterMenu.where({:name => coll, :master_group => type})
          filter_menu_get_length = SaltFilterMenu.where({}).count
          tops_all = Products.only([:old_product_id]).where({:$and => [{"filter-color": coll}, {is_sale: false}, {is_visible: true}, {cate_visible: true}]}).to_a
          tops_all = Products.only([:old_product_id]).where({:$and => [{filter_tag: {:$elemMatch => {:$in => [coll.to_s]}}}, {is_sale: false}, {is_visible: true}, {cate_visible: true}]}).to_a
          tops_all = Products.only([:old_product_id]).where({:$and => [{category: coll}, {is_sale: false}, {is_visible: true}, {cate_visible: true}]}).to_a
          tops_all = Products.only([:old_product_id]).where({:$and => [{prod_collection: coll}, {is_sale: false}, {is_visible: true}, {coll_visible: true}]}).to_a
          product = Products.where({:name => prod_name, :category => category.to_s.downcase}).only([:name, :asset_id, :prod_collection, :tags, :category, :filter, :color, :wash_care_label])[0]
                Products.where(:asset_id => product['asset_id']).update_all({:filter_tag => filter_tag.uniq, :tags => product['tags'].uniq})
                Products.where(:asset_id => product['asset_id']).update_all(filter_hash)
                product_all = Products.only([:old_product_id, :tags]).where(:asset_id => product['asset_id'])
            # Products.where(:asset_id => product['asset_id'] ).update_all(:filter => filter)
... "filter-fabric", "filter-multi-color"]).where({"filter-category": {:$exists => true}})...
        # Products.where({:$and => [{:asset_id => prod['asset_id']},
          # FabricCodes.where({:fabric_code => fab_code}).update({:color => fab_color, :is_multi_color => fab_is_multi_color})
      filter_all_master = SaltFilterMenu.where({:master_group => {:$ne => 'base'}}).distinct(:master_group).to_a
      products_all = Products.only([:old_product_id, :tags] + filter_call).where({"filter-category" => {:$exists => true}}).to_a
        # Products.where({:old_product_id => prod[:old_product_id]}).update({:tags => prod[:tags].uniq})
          # Products.where({:old_product_id => product_id}).update({
...:"filter-fit-or-style", :"filter-rise"]).where({:"filter-category" => {:$exists => true}}).to_a...
        # Products.where({:old_product_id => prod[:old_product_id]}).update({
giftcards_controller.rb
        @giftcards = Products.order('punch_no desc').where({:$and => [{:category => 'giftcards'},{:is_visible => true}]}).to_a
    gift_voucher = GiftVoucherOrder.where(:gift_code => params['code'])[0]
          product_get = Products.where({:old_product_id => prod['ProductId']}).to_a[0]
        giftcards_mdb = Products.only([:old_product_id]).order('punch_no desc').where({:$and => [{:category => 'giftcards'},{:is_visible => true}]}).to_a
group_controller.rb
        @currentpref = Preference.where({ :name => @params.to_s.split("-").join(" ") }).to_a[0]
..._raw = Products.order('created_at desc').where(:$and => [{ :$or => [{ :tags => { '$in' => [@params.to_s.split("-").join(" ").to_s] } }, { :t...
..._raw = Products.order('created_at desc').where(:$and => [{ :$or => [{ :tags => { '$in' => [@params.to_s.split("-").join(" ").to_s] } }, { :t...
..._raw = Products.order('created_at desc').where(:$and => [{ :$or => [{ :tags => { '$in' => [@params.to_s.split("-").join(" ").to_s] } }, { :t...
..._raw = Products.order('created_at desc').where(:$and => [{ :$or => [{ :tags => { '$in' => [@params.to_s.split("-").join(" ").to_s] } }, { :t...
..._raw = Products.order('created_at desc').where(:$and => [{ :$or => [{ :tags => { '$in' => [@params.to_s.split("-").join(" ").to_s] } }, { :t...
..._raw = Products.order('created_at desc').where(:$and => [{ :$or => [{ :tags => { '$in' => [@params.to_s.split("-").join(" ").to_s] } }, { :t...
      @products = Products.where('tags' => @params)
...created_at desc').order('punch_no desc').where({ :$and => [{ :tags => { :$in => [/.*#{tag_name.to_s.downcase}.*/i] } }, { :is_visible => tru...
...created_at desc').order('punch_no desc').where({ :$and => [{ :tags => { :$in => [tag_name.to_s.downcase] } }, { :is_visible => true }, { :co...
        prod_got = Products.only([:cate_visible, :coll_visible, :is_visible]).where(:old_product_id => prod_id.to_s)[0]
homepage_controller.rb
        pref_got = FilterTags.order('group_serial_number asc').where({ :$and => [{ :link => params['pref_id'].to_s.downcase }, { :filter_group => 'preferences' }] }).to_a[0]
...duct = Products.order('created_at desc').where({ :$and => [{ :filter_tag => { '$in' => query_arr } }, { :in_stock => true }, { :is_visible =...
        pref_got = FilterTags.order('group_serial_number asc').where({ :$and => [{ :link => params['pref_id'].to_s.downcase }, { :filter_group => 'preferences' }] }).to_a[0]
...duct = Products.order('created_at desc').where({ :$and => [{ :filter_tag => { '$in' => query_arr } }, { :in_stock => true }, { :is_visible =...
            # look_images_got = Looks.only([:img_path,:bg_img_path]).where(:products => {:$in => [product_get['ProductId']]})[0]
          SelectProjectAttribute.where({ :is_show_timer => true }).update({ :is_show_timer => false })
          # SelectProjectAttribute.where({:is_show_timer => true}).update({:is_show_timer => false, :is_show_sale => false})
          # MobNavBar.where({:nav_id => 'nav_20'}).update({:is_visible => false, :is_mob_visible => false})
          MobNavBar.where({ :nav_id => 'nav_16' }).update({ :is_web_visible => true })
          new_arr_car = NewArrivalsCarousal.where({ :case_of => 'home_page' }).to_a
              NewArrivalsCarousal.where({ :$and => [{ :case_of => 'home_page' }, { :is_mob_visible_ => true }] }).update({ :imgs => car['imgs'], :links => car['links'] })
              NewArrivalsCarousal.where({ :$and => [{ :case_of => 'home_page' }, { :is_mob_visible_ => false }] }).update({ :imgs => car['imgs'], :links => car['links'] })
        #SelectProjectAttribute.where({:is_show_timer => true}).update({:is_show_timer => false})
...rder('punch_no desc').order('price asc').where({:$and => [{:is_prod_new => true}, {:cate_visible => true}, {:coll_visible => true}, {:is_sal...
...rder('punch_no desc').order('price asc').where({ :$and => [...
                                         :punch_no, :asset_id, :is_sale, :multi_color, :in_stock]).order('punch_no desc').order('price asc').where({ :$and => [
                                         :punch_no, :asset_id, :is_sale, :multi_color, :in_stock]).order('punch_no desc').order('price asc').where({ :$and => [
...rder('punch_no desc').order('price asc').where({ :$and => [...
...rder('punch_no desc').order('price asc').where({:$and => [{:is_prod_new => true}, {:cate_visible => true}, {:coll_visible => true}, {:is_sal...
...rder('punch_no desc').order('price asc').where({ :$and => [...
...rder('punch_no desc').order('price asc').where({ :$and => [...
...ch_no desc').order('price asc').limit(3).where({ :$and => [{ :cate_visible => true }, { :coll_visible => true }, { :is_sale => false }] })...
...rder('punch_no desc').order('price asc').where({:$and => [{:created_at => {:$gte => date_of.to_s}}, {:cate_visible => true}, {:coll_visible ...
...rder('punch_no desc').order('price asc').where({ :$and => [...
                                     :hide_sizes]).order('punch_no desc').order('price asc').where({ :$and => [
                                     :hide_sizes]).order('punch_no desc').order('price asc').where({ :$and => [
...rder('punch_no desc').order('price asc').where({:$and => [{:is_prod_new => true},{:cate_visible => true}, {:coll_visible => true}, {:is_sale...
        # look_images_got = Looks.only([:img_path,:bg_img_path]).where(:products => {:$in => [product_get['ProductId']]})[0]
...rder('best_selling_count asc').limit(20).where(:$and => [{ :category => { :$ne => "jewellery" } }, { :category => { :$ne => "belts" } }, { :...
..._sizes]).order('best_selling_count asc').where(:$and => [{ :category => { :$ne => "jewellery" } }, { :category => { :$ne => "belts" } }, { :...
        # look_images_got = Looks.only([:img_path,:bg_img_path]).where(:products => {:$in => [product_get['ProductId']]})[0]
      mongo_test = Products.only([:old_product_id, :in_stock]).where({}).to_a
      # Products.where({}).update_all({:is_prod_new => false})
      prod_got = Products.only([:old_product_id]).where({ :created_at => { :$gte => created_at } }).to_a
        # Products.where({:old_product_id => prod[:old_product_id]}).update({:is_prod_new => true})
looks_controller.rb
            looks_prod = Looks.where(:look_id => @item)[0]['products']
...olor, :details]).order('serial_no desc').where({:$and => [{:is_visible => true}, {:look_id => look_id}]}).to_a...
...sc').skip(skip_count).limit(limit_count).where(:is_visible => true).to_a...
            prod_get = Products.only([:name, :price, :tag_line, :usd_price, :in_stock, :is_international, :category]).limit(1).where(:old_product_id => prod)[0]
      @looks_swiper_data = Looks.only([:name, :img_path, :look_id]).skip(0).limit(5).order('serial_no desc').where(:look_tags => {:$in => [@look_tag_param]}).to_a
...order('serial_no desc').skip(0).limit(5).where(:look_tags => {:$in => [@look_tag_param]}).to_a...
            @prod_get = Products.only([:name, :price, :tag_line, :usd_price, :in_stock, :is_international, :category]).where(:old_product_id => prod)[0]
        look_found = Looks.where(:name => prod[1].to_s)
          Looks.where(:name => prod[1].to_s).update(:look_tags => tag)
mimoto_controller.rb
...s_prod_new desc').order("punch_no desc").where({:$and => [{:prod_collection => @params.to_s}, {:is_visible => true}, {:coll_visible => true}...
...s_prod_new desc').order("punch_no desc").where({:$and => [{:prod_collection => @params.to_s}, {:is_visible => true}, {:coll_visible => true}...
      #@coll_prods = Products.order("created_at desc").order("punch_no desc").order("is_prod_new desc").where({:prod_collection => @params.to_s, :is_visible => true, :coll_visible => true})
        @allColl = Collection.only([:name, :url, :tagline]).order("punch_no desc").where(:visible => true).all
...s_prod_new desc').order("punch_no desc").where({:$and => [{:prod_collection => @params.to_s}, {:is_visible => true}, {:coll_visible => true}...
...s_prod_new desc').order("punch_no desc").where({:$and => [{:prod_collection => @params.to_s}, {:is_visible => true}, {:coll_visible => true}...
        # @coll_prods = Products.order("created_at desc").order("punch_no desc").order("is_prod_new desc").where({:prod_collection => @params.to_s, :is_visible => true, :coll_visible => true})
        coll_img = Collection.only(:web_coll_img).where(:name => params[:name].to_s.downcase)[0]
        @allColl = Collection.only([:display_name, :mob_img_path, :name, :tagline, :description, :url, :international]).order("punch_no desc").where(:visible => true).all
...s_prod_new desc').order("punch_no desc").where({:$and => [{:prod_collection => @name.to_s}, {:is_visible => true}, {:coll_visible => true}, ...
...s_prod_new desc').order("punch_no desc").where({:$and => [{:prod_collection => @name.to_s}, {:is_visible => true}, {:coll_visible => true}, ...
...).order_by("cate_id asc, punch_no desc").where(:$and => [{:prod_collection => @name}, {:is_visible => true}, {:coll_visible => true}, {:is_s...
order_controller.rb
      order = Orders.where(:order_id => params['order_id'])[0]
      Orders.where({ :order_id => params["order_id"].to_s }).update(:gift_recived_user_details => gift_recived_user_details)
          @service = Orders.where({ :order_id => params["order_id"].to_s }).to_a[0]['delivered_by']
      lock_zip = LockdownPincodes.where(:pincode => zipcode.to_s, :during_lockdown => true)[0]
        code_got = SaltReferralCodes.where({ :ref_display_name => params["promocode"].to_s.downcase }).to_a
          promo_array = AmbassadorPromos.only(:promo).where({})
              prc = Products.only(:price).where(:old_product_id => k[1]['id'].to_s, :is_sale => false)[0]
...ode, :valid_from, :valid_to, :discount]).where({ :$and => [{ :valid_from => { :$lte => date_got.beginning_of_day } }, { :valid_to => { :$gte...
                          saltlbbwinner1_taken = Orders.where({ :$and => [
                          saltlbbwinner2_taken = Orders.where({ :$and => [
                        @code_got = SaltReferralCodes.where({ :ref_display_name => params["promocode"].to_s.downcase }).to_a
        code_got = SaltReferralCodes.where({ :ref_display_name => params["promocode"].to_s.downcase }).to_a
            promo_array = AmbassadorPromos.only(:promo).where({})
                prc = Products.only(:price).where(:old_product_id => k[1]['id'].to_s, :is_sale => false)[0]
...ode, :valid_from, :valid_to, :discount]).where({ :$and => [{ :valid_from => { :$lte => date_got.beginning_of_day } }, { :valid_to => { :$gte...
                    @code_got = SaltReferralCodes.where({ :ref_display_name => params["promocode"].to_s.downcase }).to_a
      order_got = Orders.only([:order_id, :name, :phone, :email, :pending_amount, :curr_currency, :ex_rate, :billing_address]).where({ :order_id => @order_ID }).to_a[0]
        razorpay_update = RazorpayDetails.where({ :$and => [{ :salt_order_id => order_got[:order_id].to_s }] })
      order_by_phone = Orders.only([:order_id]).where(
        Orders.where({ :order_id => params["id"].to_s }).update(:delivery_address => JSON.parse(@params['DeliveryAddress']))
order_controller_08-02-20_rb
      order_got = Orders.only([:order_id, :name, :phone, :email, :pending_amount, :curr_currency, :ex_rate, :billing_address]).where({:order_id => @orderID}).to_a[0]
        razorpay_update = RazorpayDetails.where({:$and => [{:salt_order_id => order_got[:order_id].to_s}]})
                  saltlbbwinner1_taken = Orders.where({:$and => [
                  saltlbbwinner2_taken = Orders.where({:$and => [
                @code_got = SaltReferralCodes.where({:ref_display_name => params["promocode"].to_s.downcase}).to_a
        Orders.where({:order_id => params["id"].to_s}).update(:delivery_address => JSON.parse(@params['DeliveryAddress']))
product_controller.rb
        fabric_code = Products.where(:old_product_id => params['product'].to_s).only([:fabric_codes])[0]
        color = FabricCodes.where(:fabric_code => fabric_code['fabric_codes'][0])[0]
...g_color, :color, :details, :is_visible]).where(:products => {:$in => [@pid]}).to_a...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'pants'}, {:category => 'shorts'...
...s_international, :category, :inventory]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'pants'}, {:category => 'shorts'...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'outerwear'}, {:category => 'jew...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'tops'}, {:category => 'sweaters...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'shirts'}, {:category => 'tunics...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'pants'}, {:category => 'dresses...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'shirts'}, {:category => 'tunics...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'shirts'}, {:category => 'tunics...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'masks'}]}, {:is_visible => true...
...g_color, :color, :details, :is_visible]).where(:products => {:$in => [@pid]}).to_a...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'pants'}, {:category => 'shorts'...
...s_international, :category, :inventory]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'pants'}, {:category => 'shorts'...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'outerwear'}, {:category => 'jew...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'tops'}, {:category => 'sweaters...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'shirts'}, {:category => 'tunics...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'pants'}, {:category => 'dresses...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'shirts'}, {:category => 'tunics...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'shirts'}, {:category => 'tunics...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'masks'}]}, {:is_visible => true...
...g_color, :color, :details, :is_visible]).where(:products => {:$in => [@pid]}).to_a...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'pants'}, {:category => 'shorts'...
...s_international, :category, :inventory]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'pants'}, {:category => 'shorts'...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'outerwear'}, {:category => 'jew...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'outerwear'}, {:category => 'top...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'shirts'}, {:category => 'tunics...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'pants'}, {:category => 'dresses...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'shirts'}, {:category => 'pants'...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'shirts'}, {:category => 'tunics...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'masks'}]}, {:is_visible => true...
...g_color, :color, :details, :is_visible]).where(:products => {:$in => [@pid]}).to_a...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'pants'},{:category => 'shorts'}...
...s_international, :category, :inventory]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'pants'},{:category => 'shorts'}...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'outerwear'}, {:category => 'jew...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'outerwear'}, {:category => 'top...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'shirts'}, {:category => 'tunics...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'pants'}, {:category => 'dresses...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'shirts'}, {:category => 'pants'...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'shirts'}, {:category => 'tunics...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'masks'}]}, {:is_visible => true...
...g_color, :color, :details, :is_visible]).where(:products => {:$in => [@pid]}).to_a...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:is_visible => true}])[0]...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'pants'}, {:category => 'shorts'...
...s_international, :category, :inventory]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'pants'}, {:category => 'shorts'...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'outerwear'}, {:category => 'jew...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'outerwear'}, {:category => 'top...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'shirts'}, {:category => 'tunics...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'pants'}, {:category => 'dresses...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'shirts'}, {:category => 'pants'...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'shirts'}, {:category => 'tunics...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'masks'}]}, {:is_visible => true...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:is_visible => true}])[0]...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'pants'}, {:category => 'shorts'...
...s_international, :category, :inventory]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'pants'}, {:category => 'shorts'...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'outerwear'}, {:category => 'jew...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'outerwear'}, {:category => 'top...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'shirts'}, {:category => 'tunics...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'pants'}, {:category => 'dresses...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'shirts'}, {:category => 'pants'...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'shirts'}, {:category => 'tunics...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'masks'}]}, {:is_visible => true...
...g_color, :color, :details, :is_visible]).where(:products => {:$in => [@pid]}).to_a...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:is_visible => true}])[0]...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'pants'}, {:category => 'shorts'...
...s_international, :category, :inventory]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'pants'}, {:category => 'shorts'...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'outerwear'}, {:category => 'jew...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'outerwear'}, {:category => 'top...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'shirts'}, {:category => 'tunics...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'pants'}, {:category => 'dresses...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'shirts'}, {:category => 'pants'...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'shirts'}, {:category => 'tunics...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'masks'}]}, {:is_visible => true...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:is_visible => true}])[0]...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'pants'}, {:category => 'shorts'...
...s_international, :category, :inventory]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'pants'}, {:category => 'shorts'...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'outerwear'}, {:category => 'jew...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'outerwear'}, {:category => 'top...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'shirts'}, {:category => 'tunics...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'pants'}, {:category => 'dresses...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'shirts'}, {:category => 'pants'...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'shirts'}, {:category => 'tunics...
...in_stock, :is_international, :category]).where(:$and => [{:old_product_id => prod}, {:$or => [{:category => 'masks'}]}, {:is_visible => true...
                  fev_prod = Products.only(:old_product_id).where(:product_id => @userdetail["Favourites"][i].to_s)[0]
..._codes, :hide_sizes]).order('price asc').where({:$and => [{:fabric_codes => {:$in => [prod_fabric_code.to_s.upcase]}}, {:cate_visible => tru...
...s_international]).order('punch_no desc').where({:$and => [{:category => prod_category.to_s.downcase}, {:cate_visible => true}, {:coll_visibl...
..., :is_international]).order('price asc').where({:$and => [{:pattern_no => prod_pattern}, {:cate_visible => true}, {:is_sale => false},{:in_s...
...h_no desc').order('price asc').limit(30).where({:$and => [{:cate_visible => true}, {:coll_visible => true}, {:is_sale => false}]}).to_a...
sale_controller.rb
...ale_name, :in_stock, :is_international]).where({ :$and => [{ :name => data_new[1].to_s }, { :category => data_new[0].to_s.downcase }, { :is_...
..._sale = Products.only([:old_product_id]).where({:$and => [{:name => data_new[1].to_s}, {:category => data_new[0].to_s.downcase}, {:is_sale =...
...          # Products.where({:old_product_id => prod_got['old_product_id']}).update({:inventory => prod_got['inventory'],...
          prod_get = Products.where({ :$and => [{ :name => data_new[1].to_s }, { :category => data_new[0].to_s.downcase }, { :is_sale => false }, { :cate_visible => true }] }).to_a
            # prod_got_exist_sale = Products.only([:old_product_id]).where({:$and => [{:name => data_new[1].to_s}, {:category => data_new[0].to_s.downcase}, {:is_sale => true}]}).to_a
      prod_got = Products.where({ :$and => [{ :sale_name => sale_name }, { :is_sale => true }] })
...ale_name, :in_stock, :is_international]).where({ :$and => [{ :is_sale => true }, { :sale_name => 'new year sale' }] }).to_a...
...asset_id, :in_stock]).order('price asc').where({ :$and => [{ :cate_visible => true }, { :coll_visible => true }, { :is_sale => true }, { :sa...
        prod_all = Products.where({ :$and => [{ :is_sale => true }, { :in_stock => true }] })
...asset_id, :in_stock]).order('price asc').where({ :$and => [{ :cate_visible => true }, { :coll_visible => true }, { :is_sale => true }, { :sa...
...isible, :is_visible]).order('price asc').where({ :$and => [{ :cate_visible => true }, { :coll_visible => true }, { :is_sale => true }, { :sa...
          # look_images_got = Looks.only([:img_path,:bg_img_path]).where(:products => {:$in => [product_get['ProductId']]})[0]
salt_controller.rb
                      razorpay_update = RazorpayDetails.where({:$and => [{:salt_order_id => params['salt_order_id'].to_s}]})
                      razorpay_update = RazorpayDetails.where({:$and => [{:salt_order_id => params['salt_order_id'].to_s}]})
...        Orders.where(:order_id => order['OrderId']).update(:add_info => @mongo_order['add_info'], :items => @mongo...
        Orders.where(:order_id => id).update(:add_info => @mongo_order['add_info'], :updated_by => @mongo_order['updated_by'], :last_updated_at => @mongo_order['last_updated_at'])
        Orders.where(:order_id => id).update(:add_info => @mongo_order['add_info'], :updated_by => @mongo_order['updated_by'], :last_updated_at => @mongo_order['last_updated_at'])
        Orders.where(:order_id => id).update(:add_info => @mongo_order['add_info'], :updated_by => @mongo_order['updated_by'], :last_updated_at => @mongo_order['last_updated_at'])
        Orders.where(:order_id => id).update(:add_info => @mongo_order['add_info'], :updated_by => @mongo_order['updated_by'], :last_updated_at => @mongo_order['last_updated_at'])
        Orders.where(:order_id => id).update(:add_info => @mongo_order['add_info'], :updated_by => @mongo_order['updated_by'], :last_updated_at => @mongo_order['last_updated_at'])
        Orders.where(:order_id => id).update(:add_info => @mongo_order['add_info'], :updated_by => @mongo_order['updated_by'], :last_updated_at => @mongo_order['last_updated_at'])
          prod = Products.where(:old_product_id => itms['ProductID']).only([:prod_collection,:category,:sku])[0]
      lock_zip = LockdownPincodes.where(:pincode => zipcode.to_s, :during_lockdown => true)[0]
search_controller.rb
            # fab_name = FabricCodes.only([:fabric_name]).where({:fabric_code => prod[:fabric_codes][0]})[0][:fabric_name]
...id, :category]).order('created_at desc').where({:$and => [{:cate_visible => true, :is_sale => false, :is_visible => true}]}).full_text_searc...
...id, :category]).order('created_at desc').where({:$and => [{:cate_visible => true, :is_sale => false, :is_visible => true}]}).full_text_searc...
      prod_all = Products.order('created_at desc').where({}).to_a
            # Products.where({:old_product_id => prod[:old_product_id]}).update({:prime_fabric_name => prime_fabric})
...).only([:old_product_id, :name, :price]).where({:$and => [{:is_sale => false}, {:in_stock => true}, {:is_visible => true}, {:cate_visible =>...
shop_controller.rb
            @cate_prods = Products.order(sorted_by).where({:$and => query_and}).skip(params['skip_limit'].to_i).limit(params['add_limit'].to_i).to_a
            @cate_prods = Products.order(sorted_by).where({:$and => query_and}).skip(params['skip_limit'].to_i).to_a
... @cate_prods = Products.order(sorted_by).where({:$and => [{:category => params['category'].to_s}, {:is_visible => true}, {:cate_visible => t...
...ods_2 = Products.order('created_at asc').where({:$and => [{:category => params['category'].to_s}, {:is_visible => true}, {:cate_visible => t...
            @cate_prods = Products.order(sorted_by).where({:$and => [{:is_visible => true}, {:cate_visible => true}, {:is_sale => false}]}).to_a
            @cate_prods_2 = Products.order('created_at asc').where({:$and => [{:is_visible => true}, {:cate_visible => true}, {:is_sale => false}]}).to_a
            @cate_prods = Products.order(sorted_by).where({:$and => query_and}).skip(params['skip_limit'].to_i).limit(limit_prods).to_a
            @cate_prods = Products.order(sorted_by).where({:$and => query_and}).skip(params['skip_limit'].to_i).to_a
... @cate_prods = Products.order(sorted_by).where({:$and => [{:category => params['category'].to_s}, {:is_visible => true}, {:cate_visible => t...
...ods_2 = Products.order('created_at asc').where({:$and => [{:category => params['category'].to_s}, {:is_visible => true}, {:cate_visible => t...
            @cate_prods = Products.order(sorted_by).where({:$and => [{:is_visible => true}, {:cate_visible => true}, {:is_sale => false}]}).to_a
            @cate_prods_2 = Products.order('created_at asc').where({:$and => [{:is_visible => true}, {:cate_visible => true}, {:is_sale => false}]}).to_a
      all_prod = Products.only([:old_product_id, :coll_visible, :cate_id, :cate_visible, :is_visible, :is_sale, :asset_id, :hide_sizes, :is_international], :pattern_no).where(category_got).to_a
testimonials_controller.rb
                @prod_get = Products.only([:name, :price, :tag_line, :usd_price, :in_stock, :is_international,:category]).where(:old_product_id => prod)[0]
                @prod_get = Products.only([:name, :price, :tag_line, :usd_price, :in_stock,:is_international,:category]).where(:old_product_id => prod)[0]
                @prod_get = Products.only([:name, :price, :tag_line, :usd_price, :in_stock,:is_international,:category]).where(:old_product_id => prod)[0]
                @prod_get = Products.only([:name, :price, :tag_line, :usd_price, :in_stock,:is_international,:category]).where(:old_product_id => prod)[0]
users_controller.rb
        get_user = WhatsappUsers.where({ :user_token_id => params_got['user_token_id'] })
          get_zip = LockdownPincodes.where(:pincode => @zip.to_s, :during_lockdown => true)[0]
...nly([:promo_code, :valid_to, :discount]).where({ :$and => [{ :valid_from => { :$lte => date_got.beginning_of_day } }, { :valid_to => { :$gte...
      user_coupons = UserBasedCoupon.where(:email => email.to_s.downcase)[0]
          UserBasedCoupon.where(:email => email.to_s.downcase).update(
          UserBasedCoupon.where(:email => email.to_s.downcase).update(
      orders = Orders.where(:order_id => params['order_id']).only([:items, :order_id, :save_bank_details])[0]
      orders = Orders.where(:order_id => params['order_id']).only([:email, :order_id, :items])[0]
          return_order = Orders.where(:order_id => 'r_' + params['order_id'] + '_' + ind.to_s)[0]
      order = Orders.where(:order_id => @params['order_id']).only([:email, :order_id, :items])[0]
      orders = Orders.where(:order_id => params['order_id']).only([:items])[0]
            Orders.where(:order_id => order_id).update(:bank_details => user_details, :save_bank_details => true)
      # got_users = IntentUsers.where({:is_order_placed => false}).to_a
      #     user_order = Orders.where({:email => user[:email]}).count
      #       IntentUsers.where({:email => user[:email]}).update_all({:is_order_placed => true})
        got_user = IntentUsers.only([:is_order_placed]).where({ :$and => [{ ip: user_ip }] }).to_a
      got_user = IntentUsers.where({ :$and => [{ ip: user_detail[:user_ip].to_s.downcase }, { email: user_detail[:email].to_s.downcase }] })
...          IntentUsers.where({ :$and => [{ ip: user_detail[:user_ip].to_s }, { email: user_detail[:email].to_s.downcase }]...
          IntentUsers.where({ :$and => [{ ip: user_detail[:user_ip].to_s }, { email: user_detail[:email].to_s.downcase }] }).update({ :details => details })
        user_order = Orders.where({ :email => user_detail[:email].to_s.downcase.strip }).count
          IntentUsers.where({ :email => user_detail[:email].to_s.downcase.strip }).update_all({ :is_order_placed => true })
        intent_got = IntentUsers.where({ :$and => [{ ip: user_detail[:user_ip].to_s.downcase }, { email: "" }] }).to_a
...          IntentUsers.where({ :$and => [{ ip: user_detail[:user_ip].to_s.downcase }, { email: "" }] }).update({ :email =>...
          user_order = Orders.where({ :email => user_detail[:email].to_s.downcase.strip }).count
            IntentUsers.where({ :email => user_detail[:email].to_s.downcase.strip }).update_all({ :is_order_placed => true })
        gift_voucher = GiftVoucherOrder.where({ :order_id => order_id }).to_a
          GiftVoucherOrder.where({ :order_id => order_id }).update({ :is_paid => true, :paid_on => Time.now.to_s, :order_status => "Payment Confirmed" })
        # gift_voucher = GiftVoucherOrder.where(:gift_code => voucher.to_s.upcase)[0]
        gift_voucher = GiftVoucherOrder.where({ :$and => [{ :gift_code => voucher.to_s.upcase }, { :receiver_email => email.to_s.downcase }, { :is_redeem => false }] })[0]
                      GiftVoucherOrder.where(:gift_code => voucher.to_s).update(:is_redeem => true)
          @track_info = OrderTrackingInfo.where({ :$and => [{ :order_id => @params['tracking_params']['order_id'].to_s }, { :item_index => @params['tracking_params']['item_index'] }] })
        order_details = Orders.where(:order_id => params[:order_id])[0]
        order_found_mongo = Orders.where({ :order_id => ref_order_id.to_s })[0]
            Orders.where({ :order_id => ref_order_id.to_s }).update(:full_payment_date => full_payment_date)
            Orders.where({ :order_id => ref_order_id.to_s }).update(:payment_status => 'Paid', :items => order_found_mongo['items'])
            Orders.where({ :order_id => ref_order_id.to_s }).update(:payment_mode => 'LINK', :payment_status => 'Paid', :items => order_found_mongo['items'])
          @ord_data = Orders.order('order_date_time desc').where({ :$and => [
          @ord_data = Orders.order('order_date_time desc').where({ :$and => [
            Orders.where(:order_id => id.to_s).update(:items => @mongo_order['items'], :updated_by => @mongo_order['updated_by'], :last_updated_at => @mongo_order['last_updated_at'])
...              Orders.where(:order_id => id.to_s).update(:items => @mongo_order['items'], :payment_status => @mongo_order...
              Orders.where(:order_id => id.to_s).update(:items => @mongo_order['items'], :updated_by => @mongo_order['updated_by'], :last_updated_at => @mongo_order['last_updated_at'])
...              Orders.where(:order_id => id.to_s).update(:exchange_index => 0, :items => @mongo_order['items'], :payment_...
...              Orders.where(:order_id => id.to_s).update(:exchange_index => 0, :items => @mongo_order['items'], :updated_...
...              Orders.where(:order_id => id.to_s).update(:exchange_index => len.to_i, :items => @mongo_order['items'], :p...
...              Orders.where(:order_id => id.to_s).update(:exchange_index => len.to_i, :items => @mongo_order['items'], :u...
...              Orders.where(:order_id => id.to_s).update(:alteration_index => 0, :items => @mongo_order['items'], :paymen...
...              Orders.where(:order_id => id.to_s).update(:alteration_index => 0, :items => @mongo_order['items'], :update...
...              Orders.where(:order_id => id.to_s).update(:alteration_index => len.to_i, :items => @mongo_order['items'], ...
...              Orders.where(:order_id => id.to_s).update(:alteration_index => len.to_i, :items => @mongo_order['items'], ...
            Orders.where(:order_id => id.to_s).update(:items => @mongo_order['items'], :updated_by => @mongo_order['updated_by'], :last_updated_at => @mongo_order['last_updated_at'])
...              Orders.where(:order_id => id.to_s).update(:items => @mongo_order['items'], :payment_status => @mongo_order...
              Orders.where(:order_id => id.to_s).update(:items => @mongo_order['items'], :updated_by => @mongo_order['updated_by'], :last_updated_at => @mongo_order['last_updated_at'])
...              Orders.where(:order_id => id.to_s).update(:exchange_index => 0, :items => @mongo_order['items'], :payment_...
...              Orders.where(:order_id => id.to_s).update(:exchange_index => 0, :items => @mongo_order['items'], :updated_...
...              Orders.where(:order_id => id.to_s).update(:exchange_index => len.to_i, :items => @mongo_order['items'], :p...
...              Orders.where(:order_id => id.to_s).update(:exchange_index => len.to_i, :items => @mongo_order['items'], :u...
...              Orders.where(:order_id => id.to_s).update(:alteration_index => 0, :items => @mongo_order['items'], :paymen...
...              Orders.where(:order_id => id.to_s).update(:alteration_index => 0, :items => @mongo_order['items'], :update...
...              Orders.where(:order_id => id.to_s).update(:alteration_index => len.to_i, :items => @mongo_order['items'], ...
...              Orders.where(:order_id => id.to_s).update(:alteration_index => len.to_i, :items => @mongo_order['items'], ...
        all_offer = ValueOffers.where(:offer_id => id)
app\helpers
admin_task_helper.rb
      get_property = AdminTaskList.where({task_id: task_id})[0]
      get_property = Orders.only(get_it.split(',')).where({order_id: return_order_id})[0]
      # order = Orders.where(:order_id => order_id)[0]
      # order = Orders.where(:order_id => order_id)[0]
      admin_task = AdminTaskList.where(:task_id => task_id)[0]
          taskdata = AdminTaskList.where(:task_id => params['task_id'].to_s)[0]
          AdminTaskList.where(:task_id => params['task_id'].to_s).update(:selected => selected_val,
          taskdata = AdminTaskList.where(:task_id => params['task_id'].to_s)[0]
          AdminTaskList.where(:task_id => params['task_id'].to_s).update(:selected => selected_val,
          taskdata = AdminTaskList.where(:task_id => params['task_id'].to_s)[0]
          AdminTaskList.where(:task_id => params['task_id'].to_s).update(:selected => selected_val,
          taskdata = AdminTaskList.where(:task_id => params['task_id'].to_s)[0]
          AdminTaskList.where(:task_id => params['task_id'].to_s).update(:task_status => status,
          taskdata = AdminTaskList.where(:task_id => params['task_id'].to_s)[0]
          AdminTaskList.where(:task_id => params['task_id'].to_s).update(:task_status => status,
          taskdata = AdminTaskList.where(:task_id => params['task_id'].to_s)[0]
          AdminTaskList.where(:task_id => params['task_id'].to_s).update(:task_status => status,
          taskdata = AdminTaskList.where(:task_id => "task_" + params['return_order_id'].to_s + "_call_process")[0]
          AdminTaskList.where(:task_id => "task_" + params['return_order_id'].to_s + "_call_process").update(:task_status => status,
customise_helper.rb
        customise_blazer = CustomiseOptions.where({:customise_id => 'blazer_001'}).to_a[0]
        customise_blazer = CustomiseOptions.where({:customise_id => 'all_001'}).to_a[0]
filter_helper.rb
...er_master = SaltFilterMenu.only([:name]).where({:$and => [{:master_group => {:$ne => 'base'}}, {:master_group => {:$ne => 'collection'}}, {:...
..., filter_call]).order(params['sort_by']).where({:$and => [{:category => "outerwear"}, {:is_sale => false}, {:is_visible => true}]}).to_a...
..., filter_call]).order('created_at desc').where({:$and => [{:category => "outerwear"}, {:is_sale => false}, {:is_visible => true}]}).to_a...
..., filter_call]).order(params['sort_by']).where({:$and => [{:$or => [{:category => "skirts"}, {:category => "pants"}]}, {:fabric_codes => fab...
..., filter_call]).order('created_at desc').where({:$and => [{:$or => [{:category => "skirts"}, {:category => "pants"}]}, {:fabric_codes => fab...
            products_got = Products.only([:old_product_id, :asset_id, :name, :tag_line, :price, filter_call]).order(params['sort_by']).where({:$and => query_and}).to_a
            products_got = Products.only([:old_product_id, :asset_id, :name, :tag_line, :price, filter_call]).order('created_at desc').where({:$and => query_and}).to_a
..., filter_call]).order(params['sort_by']).where(:$and => [{'filter-category' => {:$exists => true}}, {:prod_collection => collection.to_s.dow...
..., filter_call]).order(params['sort_by']).where(:$and => [{'filter-category' => {:$exists => true}}, {:is_visible => true}, {:cate_visible =>...
..., filter_call]).order('created_at desc').where(:$and => [{'filter-category' => {:$exists => true}}, {:prod_collection => collection.to_s.dow...
..., filter_call]).order('created_at desc').where(:$and => [{'filter-category' => {:$exists => true}}, {:is_visible => true}, {:cate_visible =>...
...  filter_count["color-multi"] = Products.where(:$and => [{'filter-category' => {:$exists => true}}, {:prod_collection => collection.to_s.dow...
...  filter_count["color-multi"] = Products.where(:$and => [{'filter-category' => {:$exists => true}}, {"filter-multi-color" => 'true'}, {:is_v...
        filter_count["color-multi"] = Products.where({:$and => query_and}).count.to_i
        multi_color_prod = Products.only([:old_product_id]).where({:$and => query_and}).to_a
homepage_helper.rb
      get_token = InstaAccessTokens.only([:long_access_token]).where({:$and => [{:valid_from => {:$lte => date_now}}, {:valid_to => {:$gte => date_now}}]}).to_a
      get_token = InstaAccessTokens.order('created_on desc').only([:long_access_token]).where({}).to_a
inventory_helper.rb
            prod_fabric_ar = Products.only([:fabric_codes]).where(:old_product_id => item[:old_product_id])[0][:fabric_codes]
                    # FabricCodes.where(:fabric_code => fabric_code).update(:fabric_qty => fabric_left.to_s)
                    FabricCodes.where(:fabric_number => fabric_code_no).update(:fabric_qty => fabric_left.to_s)
                    FabricCodes.where(:fabric_number => fabric_code_no).update(:fabric_qty => fabric_left.to_s)
...ection, :old_product_id, :fabric_codes]).where({"fabric_codes": /.*#{fabric_code_no}.*/i, :is_sale => false, :$or => [{:in_stock => true}, {...
                    FabricCodes.where(:fabric_number => fabric_code_no).update(:fabric_qty => "0")
...ection, :old_product_id, :fabric_codes]).where({"fabric_codes":  /.*#{fabric_code_no}.*/i, :is_sale => false, :$or => [{:in_stock => true}, ...
            prod_hot_sale = Products.only([:sale_name]).where(:old_product_id => item[:old_product_id]).to_a[0]
        Products.where(:old_product_id => prod[:old_product_id]).update(:in_stock => 'false')
      prod_found = Products.only([:inventory]).where(:old_product_id => item_id)[0]
      Products.where(:old_product_id => item_id).update({ :inventory => new_sale_inv, :in_stock => in_stock })
      prod_found = Products.only([:inventory, :old_product_id, :prod_collection]).where(:old_product_id => item_id)[0]
        Products.where(:old_product_id => item_id).update({ :inventory => new_inv, :in_stock => any_in_stock })
        Products.where(:old_product_id => item_id).update({ :inventory => new_inv })
      prod_found = Products.only([:inventory, :old_product_id, :prod_collection]).where(:old_product_id => item_id)[0]
        Products.where(:old_product_id => item_id).update({ :inventory => new_inv, :in_stock => any_in_stock , :hide_sizes => hide_size })
        Products.where(:old_product_id => item_id).update({ :inventory => new_inv, :hide_sizes => hide_size })
layouts_helper.rb
          img_path = NewArrivalsCarousal.where({ :$and => [{ :case_of => 'home_page' }, { :is_mob_visible => false }] }).only([:imgs]).to_a[0]['imgs'][0]
        img_path = NewArrivalsCarousal.where({ :$and => [{ :case_of => 'home_page' }, { :is_mob_visible => false }] }).only([:imgs]).to_a[0]['imgs'][0]
        article_get = BlogArticle.where({:article_id => article}).to_a[0]
          group_get = BlogGroup.where({:group_id => group}).to_a[0]
..._prod_new desc').order('serial_no desc').where(:$and => [{:tags => {:$in => [tag]}}, {:is_visible => true}, {:$or => [{:coll_visible => true...
..._sale]).order('best_selling_count desc').where(:$and => [{:best_selling_count.gte => 10}, {:is_visible => true}, {:$or => [{:coll_visible =>...
..._prod_new desc').order('serial_no desc').where(:$and => [{:tags => {:$in => [tag]}}, {:is_visible => true}, {:coll_visible => true}, {:cate_...
...s_sale]).order('best_selling_count asc').where(:$and => [{:best_selling_count.gte => 20}, {:is_visible => true}, {:coll_visible => true}, {:...
...rder('best_selling_count asc').limit(20).where(:$and => [{:category => {:$ne => "jewellery"}}, {:category => {:$ne => "belts"}}, {:category ...
order_helper.rb
      orders_got = Orders.order('order_date_time desc').only([:billing_address]).where({ :$or => [
            user_ref_dis = SaltReferralCodes.where({ :ref_display_name => prefix_salt.to_s }).count
              SaltReferralCodes.where({ :ref_user_id => user_details['email'] }).update({ :ref_display_name => prefix_salt })
        order_got = Orders.where({ :order_id => order_id }).to_a
                  credit_amount = Products.where({:old_product_id => item['old_product_id'].to_s}).to_a[0]['credit_price']
        orders = Orders.where({ :$and => [{ :email => email.to_s.downcase }, { :phone => phone }] }).only([:status, :order_id])
        orders = Orders.where({ :$or => [{ :email => email.to_s.downcase }, { :phone => phone }] }).only([:status, :order_id])
      IntentUsers.where({ :$or => [{ email: email.to_s.strip }, { :$and => [{ ip: user_ip.to_s }, { email: email.to_s.strip }] }] }).update_all({ :is_order_placed => true })
              Orders.where(:order_id => order_id).update(:stp_false_reason => "First time Order")
                Orders.where(:order_id => order_id).update(:stp_false_reason => "Multiple sizes")
              Orders.where(:order_id => order_id).update(:stp_false_reason => "Is tailor Order")
              Orders.where(:order_id => order_id).update(:stp_false_reason => "Is tailor and first time order")
          Orders.where(:order_id => order_id).update(:stp_false_reason => "Ordered multiple items")
                  m_order = Orders.where({ :order_id => @orderID.to_s }).to_a[0]
                  m_order = Orders.where({ :order_id => @orderID.to_s }).to_a[0]
        ord_stp = Orders.where(:order_id => order_id.to_s).only(:is_stp, :order_times, :payment_mode, :items_count, :order_date_time)[0]
        ord_stp = Orders.where(:order_id => order_id.to_s).only(:is_stp, :order_times, :payment_mode, :items_count, :order_date_time)[0]
              m_order = Orders.where({ :order_id => @orderID.to_s }).to_a[0]
        ord_stp = Orders.where(:order_id => order_id.to_s).only(:is_stp, :order_times, :payment_mode, :items_count, :order_date_time)[0]
          order = Orders.where(:email => email, :is_tailor => true)
              order = Orders.where({ :$and => [
        @ord_details = Orders.where(:order_id => order_id.to_s)
      @track_data = OrderTrackingInfo.where(:track_id => order_id + '_' + index.to_s)
        OrderTrackingInfo.where(:track_id => order_id + '_' + index.to_s).update(:tracking_info => @track_details['tracking_info'])
        promocode_apply = CouponCode.where({ :coupon_code => coupon_code })
          get_existing = SaltOptinCodes.where({ :$and => [{ :valid_from => { :$lte => date_got.beginning_of_day } }, { :valid_to => { :$gte => date_got.end_of_day } }] }).to_a
            optin_promocode_apply = UserBasedCoupon.where(:email => user_email.to_s.downcase)
      # tailor_got = TailorAttendance.order('updated_on desc').where({})[0]
      order_got = Orders.order('order_date_time asc').only([:order_status, :items, :order_id, :order_date_time, :status, :is_return_type, :is_stp]).where({ :$and => [
        get_user_order_count = Orders.where({ :$and => [
        get_user_order_count = Orders.where({ :$and => [
      get_user_order_count = Orders.where({ :$and => [
    product = Products.where(:old_product_id => old_product_id).only([:multi_color_id, :cate_visible, :coll_visible, :is_visible, :multi_color])[0]
return_helper.rb
      get_property = OrderStatus.where({ord_status_id: state_name})[0]
          Orders.where(:order_id => order_id).update(:items => order_got['items'], :updated_by => order_got['updated_by'], :last_updated_at => order_got['last_updated_at'])
          Orders.where(:order_id => order_got['order_id']).update(:items => order_got['items'], :updated_by => order_got['updated_by'], :last_updated_at => order_got['last_updated_at'])
          Orders.where(:order_id => order_got['order_id']).update(:items => order_got['items'], :updated_by => order_got['updated_by'], :last_updated_at => order_got['last_updated_at'])
        user_all_order = Orders.only([:order_id, :measurements, :email, :phone]).order('order_date_time desc').where({:$and => [{:email => email_id.to_s}, {:phone => phone_no.to_s}]})
          real_order = Orders.only([:payment_mode, :payment_status]).where(:order_id => order['old_order_id'])[0]
          Orders.where(:order_id => order_got['order_id']).update(order_got)
          real_order = Orders.only([:payment_mode, :payment_status]).where(:order_id => order['old_order_id'])[0]
          Orders.where(:order_id => order_got['order_id']).update(order_got)
          Orders.where(:order_id => order_id.to_s).update(:is_item_cancel => true, items: orders_found_priority['items'])
          Orders.where(:order_id => order_id.to_s).update(:is_item_cancel => false, items: orders_found_priority['items'])
                Orders.where(:order_id => order_id.to_s).update(:is_order_item_wise => true, :status => k.to_s, :order_status => status_order_found)
                Orders.where(:order_id => order_id.to_s).update(:is_order_item_wise => false, :status => k.to_s, :order_status => status_order_found)
              Orders.where(:order_id => order_id.to_s).update(:is_order_item_wise => false, :status => k.to_s, :order_status => status_order_found)
            Orders.where(:order_id => order_id).update(:items => order_got['items'], :updated_by => order_got['updated_by'], :last_updated_at => order_got['last_updated_at'])
                Orders.where(:order_id => order_got['order_id']).update(:items => order_got['items'], :updated_by => order_got['updated_by'], :last_updated_at => order_got['last_updated_at'])
                Orders.where(:order_id => order_got['order_id']).update(:items => order_got['items'], :updated_by => order_got['updated_by'], :last_updated_at => order_got['last_updated_at'])
      return_orders = Orders.order('order_date_time desc').where(:is_return_type => true)
        order_details = Orders.limit(1).where(:order_id => order_id)
      order = Orders.where(:order_id => order_id)[0]
            Orders.where(:order_id => order_id).update(:order_status => item_step1, :return_type_admin => params['return_type'])
              Orders.where(:order_id => order_id).update(:order_status => order['order_status'])
                Orders.where(:order_id => id.to_s).update(:items => @mongo_order['items'], :updated_by => @mongo_order['updated_by'], :last_updated_at => @mongo_order['last_updated_at'])
                Orders.where(:order_id => id.to_s).update(:items => @mongo_order['items'], :updated_by => @mongo_order['updated_by'], :last_updated_at => @mongo_order['last_updated_at'])
...                Orders.where(:order_id => id.to_s).update(:exchange_index => 0, :items => @mongo_order['items'], :updated_...
...                Orders.where(:order_id => id.to_s).update(:exchange_index => len.to_i, :items => @mongo_order['items'], :u...
...                Orders.where(:order_id => id.to_s).update(:alteration_index => 0, :items => @mongo_order['items'], :update...
...                Orders.where(:order_id => id.to_s).update(:alteration_index => len.to_i, :items => @mongo_order['items'], ...
                Orders.where(:order_id => id.to_s).update(:items => @mongo_order['items'], :updated_by => @mongo_order['updated_by'], :last_updated_at => @mongo_order['last_updated_at'])
                Orders.where(:order_id => id.to_s).update(:items => @mongo_order['items'], :updated_by => @mongo_order['updated_by'], :last_updated_at => @mongo_order['last_updated_at'])
...                Orders.where(:order_id => id.to_s).update(:exchange_index => 0, :items => @mongo_order['items'], :updated_...
...                Orders.where(:order_id => id.to_s).update(:exchange_index => len.to_i, :items => @mongo_order['items'], :u...
...                Orders.where(:order_id => id.to_s).update(:alteration_index => 0, :items => @mongo_order['items'], :update...
...                Orders.where(:order_id => id.to_s).update(:alteration_index => len.to_i, :items => @mongo_order['items'], ...
salt_algo_helper.rb
          cutting_data = CuttingSheet.where({:$and => [{:order_id => order["order_id"].to_s}, {:item_index => index.to_s}]})
            cutting_sheet_got = CuttingSheet.only([:cutting_date, :cutting_id, :sequence]).order("cutting_id desc").where({})[0]
        cutting_data = CuttingSheet.where({:cutting_id => cutting_id})
        cutting_data = CuttingSheet.where({:$and => [{:order_id => order_id}, {:item_index => item_index}]})
          CuttingSheet.where({:cutting_id => cutting_id}).update({:is_cancel => true})
          CuttingSheet.where({:cutting_id => cutting_id}).update({:done_cutting => true})
      cate_arr = Products.where({:$and => [{:is_visible => true}, {:cate_visible => true}]}).distinct(:category)
...international]).order('created_at desc').where({:$and => [{:is_sale => false}, {:is_visible => true}, {:cate_visible => true}, {:category =>...
salt_referral_helper.rb
      order_got = Orders.only([:promo_code, :email, :items, :total, :discount]).where(:order_id => order_id)[0]
...edit_orders_id, :ref_apply_by, :ref_id]).where(:ref_display_name => order_got['promo_code'].to_s.downcase)[0]...
            SaltReferralCodes.where(:ref_id => order_got['promo_code']).update(:ref_apply_by => apply_by, :ref_credit_orders_id => order_credit)
            SaltReferralCodes.where(:ref_id => order_got['promo_code']).update(:ref_apply_by => apply_by, :ref_credit_orders_id => order_credit)
            SaltReferralCodes.where(:ref_id => order_got['promo_code']).update(:ref_apply_by => apply_by, :ref_credit_orders_id => order_credit)
              SaltReferralCodes.where(:ref_id => order_got['promo_code']).update(:ref_credit_cancel_orders_id => cancel_order_credit)
...d_to, :ref_min_amount, :ref_max_amount]).where(:ref_id => ref_code)...
...d_to, :ref_min_amount, :ref_max_amount]).where(:ref_id => ref_code)...
          user_referrals = SaltReferralCodes.only([:ref_id, :ref_display_name]).where(:ref_user_id => contact)[0]
          user_referrals = SaltReferralCodes.only([:ref_id, :ref_display_name]).where(:ref_user_phone => contact)[0]
users_helper.rb
          yellow_list_users = YellowListUser.where({ :$and => [{ :email => email_id.to_s.downcase }, { :phone => phone.to_s.downcase }] }).count
          yellow_list_users = YellowListUser.where({ :$and => [{ :email => email_id.to_s.downcase }] }).count
          yellow_list_users = YellowListUser.where({ :$and => [{ :phone => phone.to_s.downcase }] }).count
        user_check_email = NewsLetterUser.where(:$and => [{ :email_id => user_email_id }, { :is_privilege => true }]).count
            user_check_phone = NewsLetterUser.where(:$and => [{ :phone => user_phone }, { :is_privilege => true }]).count
          user_check_phone = NewsLetterUser.where(:$and => [{ :phone => user_phone }, { :is_privilege => true }]).count
      name = Orders.where(:order_id => params['order_id'].to_s).only([:name, :order_id])[0]
      old_review = RatingReview.where(:$and => [
        RatingReview.where(:$and => [
      review_data = RatingReview.where(:$and => [
value_offers_helper.rb
        offers = ValueOffers.order('offer_serial_no asc').where({:$and => [{:offer_visible => true}, {:offer_mob_visible => true}]})
        offers = ValueOffers.order('offer_serial_no asc').where({:$and => [{:offer_visible => true}, {:offer_web_visible => true}]})
      prod_details = Products.only([:name, :tag_line, :in_stock, :is_international]).where(:old_product_id => prod_id)[0]
app\views\filters
_filter_mob_view_partial.html.erb
...SaltFilterMenu.order('display_name asc').where({:$and => [{:master_group => {:$ne => 'base'}},{:master_group => {:$ne => 'collection'}},{:ma...
  <% filter_master = SaltFilterMenu.where({:$and => [{:master_group => {:$ne => 'base'}},{:master_group => {:$ne => 'collection'}},{:master_group => {:$ne => 'collar'}}]}).distinct(:master_group) %>
      <%# prod_got = Products.only([:asset_id, :old_product_id, :filter_tag]).where({}) %>
_filter_view_partial.html.erb
...SaltFilterMenu.order('display_name asc').where({:$and => [{:master_group => {:$ne => 'base'}}, {:master_group => {:$ne => 'collection'}}, {:...
  <% filter_master = SaltFilterMenu.where({:$and => [{:master_group => {:$ne => 'base'}}, {:master_group => {:$ne => 'collection'}}, {:master_group => {:$ne => 'collar'}}]}).distinct(:master_group) %>
  <% multi_count = Products.where({"filter-multi-color" => true, :is_sale => false, :is_visible => true}).count.to_i %>
      <%# prod_got = Products.only([:asset_id, :old_product_id, :filter_tag]).where({}) %>
view_filters.html.erb
    <% filter_menu = SaltFilterMenu.where({:$and => [{:master_group => {:$ne => 'base'}},{:master_group => {:$ne => 'collection'}},{:master_group => {:$ne => 'collar'}}]}).to_a %>
    <% filter_master = SaltFilterMenu.where({:$and => [{:master_group => {:$ne => 'base'}},{:master_group => {:$ne => 'collection'}},{:master_group => {:$ne => 'collar'}}]}).distinct(:master_group) %>
        <%# prod_got = Products.only([:asset_id, :old_product_id, :filter_tag]).where({}) %>
    <% filter_menu = SaltFilterMenu.where({:$and => [{:master_group => {:$ne => 'base'}},{:master_group => {:$ne => 'collection'}},{:master_group => {:$ne => 'collar'}}]}).to_a %>
    <% filter_master = SaltFilterMenu.where({:$and => [{:master_group => {:$ne => 'base'}},{:master_group => {:$ne => 'collection'}},{:master_group => {:$ne => 'collar'}}]}).distinct(:master_group) %>
        <%# prod_got = Products.only([:asset_id, :old_product_id, :filter_tag]).where({}) %>
app\views\group
style_me.html.erb
...r("cate_id asc").order("serial_no desc").where(:$and => [{:tags=>{'$in' => [@params.to_s.split("-").join(" ").to_s]}}, {:is_visible => true}...
tags.html.erb
...lter_groups]).order('serial_number asc').where({:$or => [{:filter_group => 'preferences'}, {:filter_group => 'dresses'}, {:filter_group => '...
  filter_groups = Preference.order('home_serial_no asc').only([:display_name,:home_url]).where({:home_visible => true}).to_a
    <% winter_carousal = NewArrivalsCarousal.only([:imgs, :foreground_path, :transition_time]).where({:$and => [{:is_visible => true}, {:is_mob_visible => true}, {:case_of => 'winter'}]})[0] %>
    <% christmas_carousal = NewArrivalsCarousal.only([:imgs, :foreground_path, :transition_time]).where({:$and => [{:is_visible => true}, {:is_mob_visible => true}, {:case_of => 'christmas'}]})[0] %>
    @currentpref = Preference.where({:name => @params.to_s.split("-").join(" ")}).to_a[0]
..._raw = Products.order('created_at desc').where(:$and => [{:$or => [{:tags => {'$in' => [@params.to_s.split("-").join(" ").to_s]}}, {:tags =>...
..._raw = Products.order('created_at desc').where(:$and => [{:$or => [{:tags => {'$in' => [@params.to_s.split("-").join(" ").to_s]}}, {:tags =>...
..._raw = Products.order('created_at desc').where(:$and => [{:$or => [{:tags => {'$in' => [@params.to_s.split("-").join(" ").to_s]}}, {:tags =>...
..._raw = Products.order('created_at desc').where(:$and => [{:$or => [{:tags => {'$in' => [@params.to_s.split("-").join(" ").to_s]}}, {:tags =>...
..._raw = Products.order('created_at desc').where(:$and => [{:$or => [{:tags => {'$in' => [@params.to_s.split("-").join(" ").to_s]}}, {:tags =>...
..._raw = Products.order('created_at desc').where(:$and => [{:$or => [{:tags => {'$in' => [@params.to_s.split("-").join(" ").to_s]}}, {:tags =>...
      <% current_filter = FilterTags.only([:img_url]).where({:link => @currentpref['display_name']}).to_a %>
    <% winter_carousal = NewArrivalsCarousal.only([:imgs, :foreground_path, :transition_time]).where({:$and => [{:is_visible => true}, {:is_web_visible => true}, {:case_of => 'winter'}]})[0] %>
    <% christmas_carousal = NewArrivalsCarousal.only([:imgs, :foreground_path, :transition_time]).where({:$and => [{:is_visible => true}, {:is_web_visible => true}, {:case_of => 'christmas'}]})[0] %>
tags_v1.html.erb
...lter_groups]).order('serial_number asc').where({:$or => [{:filter_group => 'preferences'}, {:filter_group => 'dresses'}, {:filter_group => '...
  filter_groups = Preference.order('home_serial_no asc').only([:display_name,:home_url]).where({:home_visible => true}).to_a
    <% winter_carousal = NewArrivalsCarousal.only([:imgs, :foreground_path, :transition_time]).where({:$and => [{:is_visible => true}, {:is_mob_visible => true}, {:case_of => 'winter'}]})[0] %>
    <% christmas_carousal = NewArrivalsCarousal.only([:imgs, :foreground_path, :transition_time]).where({:$and => [{:is_visible => true}, {:is_mob_visible => true}, {:case_of => 'christmas'}]})[0] %>
    @currentpref = Preference.where({:name => @params.to_s.split("-").join(" ")}).to_a[0]
..._raw = Products.order('created_at desc').where(:$and => [{:$or => [{:tags => {'$in' => [@params.to_s.split("-").join(" ").to_s]}}, {:tags =>...
..._raw = Products.order('created_at desc').where(:$and => [{:$or => [{:tags => {'$in' => [@params.to_s.split("-").join(" ").to_s]}}, {:tags =>...
..._raw = Products.order('created_at desc').where(:$and => [{:$or => [{:tags => {'$in' => [@params.to_s.split("-").join(" ").to_s]}}, {:tags =>...
..._raw = Products.order('created_at desc').where(:$and => [{:$or => [{:tags => {'$in' => [/.*#{@params.to_s.split("-").join(" ").to_s}.*/i] }}...
..._raw = Products.order('created_at desc').where(:$and => [{:$or => [{:tags => {'$in' => [@params.to_s.split("-").join(" ").to_s]}}, {:tags =>...
..._raw = Products.order('created_at desc').where(:$and => [{:$or => [{:tags => {'$in' => [/.*#{@params.to_s.split("-").join(" ").to_s}.*/i]}},...
..._raw = Products.order('created_at desc').where(:$and => [{:$or => [{:tags => {'$in' => [@params.to_s.split("-").join(" ").to_s]}}, {:tags =>...
..._raw = Products.order('created_at desc').where(:$and => [{:$or => [{:tags => {'$in' => [/.*#{@params.to_s.split("-").join(" ").to_s}.*/i]}},...
..._raw = Products.order('created_at desc').where(:$and => [{:$or => [{:tags => {'$in' => [@params.to_s.split("-").join(" ").to_s]}}, {:tags =>...
      <% current_filter = FilterTags.only([:img_url]).where({:link => @currentpref['display_name']}).to_a %>
    <% winter_carousal = NewArrivalsCarousal.only([:imgs, :foreground_path, :transition_time]).where({:$and => [{:is_visible => true}, {:is_web_visible => true}, {:case_of => 'winter'}]})[0] %>
    <% christmas_carousal = NewArrivalsCarousal.only([:imgs, :foreground_path, :transition_time]).where({:$and => [{:is_visible => true}, {:is_web_visible => true}, {:case_of => 'christmas'}]})[0] %>
app\views\homepage
_category_circle_view_text_v1.html.erb
...display_text, :transition_time, :links]).where({:$and => [{:is_visible => true}, {:is_mob_visible => true}, {:case_of => 'home_page_category...
...ly([:asset_id]).order('created_at desc').where({:$and => [{:category => slide.to_s.downcase}, {:cate_visible => true}, {:is_sale => false}, ...
_category_circle_view_v1.html.erb
...display_text, :transition_time, :links]).where({:$and => [{:is_visible => true}, {:is_mob_visible => true}, {:case_of => 'home_page_category...
...ly([:asset_id]).order('created_at desc').where({:$and => [{:category => slide.to_s.downcase}, {:cate_visible => true}, {:is_sale => false}, ...
_home_carousel_data.erb
  query_got = Products.only([:name, :tag_line, :price, :description, :old_product_id, :is_international]).where({:$or => prod_arr}).to_a
_home_footer_partial.html.erb
  @categories = Category.only([:home_width, :home_visible, :home_display_name, :home_mob_img, :home_img_alt, :home_url]).order("home_serial_no desc").where({:home_visible => true})
  @looks = Looks.only([:is_img_left, :look_id, :img_path, :name, :bg_color, :color, :heading, :details, :home_visible]).order('home_sequence_no desc').where({:home_visible => true})
    @preferences = Preference.only([:home_display_name, :home_mob_img, :home_img_alt, :home_url, :home_visible]).order("home_serial_no asc").where({:home_visible => true})
    @preferences = FilterTags.order('group_serial_number asc').where({:$and => [{:filter_group => 'preferences'}]})
_home_footer_partial_v1.html.erb
  @categories = Category.only([:home_width, :home_visible, :home_display_name, :home_mob_img, :home_img_alt, :home_url]).order("home_serial_no desc").where({:home_visible => true})
  @looks = Looks.only([:is_img_left, :look_id, :img_path, :name, :bg_color, :color, :heading, :details, :home_visible]).order('home_sequence_no desc').where({:home_visible => true})
    @preferences = Preference.only([:home_display_name, :home_mob_img, :home_img_alt, :home_url, :home_visible]).order("home_serial_no asc").where({:home_visible => true})
    @preferences = FilterTags.order('group_serial_number asc').where({:$and => [{:filter_group => 'preferences'}]})
_home_looks_partial_v1.html.erb
  @looks_carosel = Looks.only([:is_img_left, :look_id, :img_path, :name, :bg_color, :color, :heading, :details, :carousal_visible]).order('home_sequence_no desc').where({:carousal_visible => true})
_home_newarr_swiper_v1.html.erb
...display_text, :transition_time, :links]).where({:$and => [{:is_visible => true}, {:is_mob_visible => true}, {:case_of => 'home_new_arrival'}...
...ly([:asset_id]).order('created_at desc').where({:$and => [{:category => slide.to_s.downcase}, {:cate_visible => true}, {:is_sale => false}, ...
_load_after_partial_1.html.erb
  @looks = Looks.only([:is_img_left, :look_id, :img_path, :name, :bg_color, :color, :heading, :details, :home_visible]).order('home_sequence_no desc').where({:home_visible => true})
_load_after_partial_1_web.html.erb
...rice, :category]).order('punch_no desc').where(:$and => [{:is_sale => false}, {:cate_visible => true}, {:coll_visible => true}]).limit(16) %...
...eground_path, :transition_time, :links]).where({:$and => [{:is_visible => true}, {:is_web_visible => true}, {:case_of => 'home_page'}]})[0] ...
... :hover_web_img]).order('serial_no asc').where({:is_web_visible => true})...
        <% @look_all = Looks.only([:look_id, :img_path, :serial_no, :name]).order('serial_no desc').where(:is_visible => true).limit(10) %>
_load_after_partial_2.html.erb
...me_visible]).order("home_serial_no asc").where({:home_visible => true})...
...reated_at desc').only([:old_product_id]).where(:$and => [{:tags => {'$in' => [pref[:name].to_s]}}, {:is_visible => true}, {:coll_visible => ...
_load_after_partial_4.html.erb
...:is_mob_visible]).order('serial_no asc').where({:is_mob_visible => true})...
  @reviews = Reviews.order('serial_no desc').where({:$and => [{:is_post => true}, {:is_mob_visible => true}]})
_marketing_group_v1.html.erb
     @market_data = MarketingGroup.order("display_serial_no asc").where({:$and => [{:is_visible => true},{:is_mob_visible => true}]}).to_a
_new_arrival_partial.html.erb
...rder('punch_no desc').order('price asc').where({:$and => [{:is_prod_new => true},{:is_visible => true}, {:cate_visible => true}, {:coll_visi...
_new_arrival_products_partial.html.erb
...rder('punch_no desc').order('price asc').where({:$and => [{:is_prod_new => true},{:is_visible => true}, {:cate_visible => true}, {:coll_visi...
_new_arrival_products_partial_html_erb
...rder('punch_no desc').order('price asc').where({:$and => [{:is_prod_new => true}, {:cate_visible => true}, {:coll_visible => true}, {:is_sal...
_sale_products_partial.html.erb
... :asset_id]).limit(4).order('price asc').where({:$and => [{:in_stock => true}, {:is_sale => true}, {:sale_name => sale_name}, {:cate_visible...
... :asset_id]).limit(4).order('price asc').where({:$and => [{:in_stock => true}, {:is_sale => true}, {:sale_name => sale_name}, {:cate_visible...
_sale_products_partial_v1.html.erb
... :asset_id]).limit(8).order('price asc').where({ :$and => [{ :in_stock => true }, { :is_sale => true }, { :sale_name => sale_name }, { :cate...
... :asset_id]).limit(8).order('price asc').where({ :$and => [{ :in_stock => true }, { :is_sale => true }, { :sale_name => sale_name }, { :cate...
_same_category_products_partial.html.erb
...et_id, :is_sale]).order('punch_no desc').where({:$and => [{:category => prod_category.to_s.downcase}, {:cate_visible => true}, {:is_visible ...
_same_category_products_partial_v1.html.erb
...et_id, :is_sale]).order('punch_no desc').where({:$and => [{:category => prod_category.to_s.downcase}, {:cate_visible => true}, {:is_visible ...
_same_collection_products_partial_v1.html.erb
...et_id, :is_sale]).order('punch_no desc').where({:$and => [{:prod_collection => prod_collection.to_s.downcase}, {:cate_visible => true}, {:is...
...ale,:created_at]).order('punch_no desc').where({:$and => [{"created_at": /.*#{prod_Created_at}.*/i,}, {:cate_visible => true}, {:is_visible ...
_same_color_group_products_partial.html.erb
...:asset_id, :is_sale]).order('price asc').where({:$and => [{:color_group => prod_color_group}, {:cate_visible => true}, {:coll_visible => tru...
_same_color_products_partial.html.erb
...:asset_id, :is_sale]).order('price asc').where({:$and => [{:cate_visible => true}, {:coll_visible => true}, {:is_sale => false}]})...
_same_fabric_products_partial.html.erb
...:asset_id, :is_sale]).order('price asc').where({:$and => [{:fabric_codes => {:$in => [prod_fabric_code.to_s.upcase]}}, {:cate_visible => tru...
_same_fabric_products_partial_v1.html.erb
...:asset_id, :is_sale]).order('price asc').where({:$and => [{:fabric_codes => {:$in => [prod_fabric_code.to_s.upcase]}}, {:cate_visible => tru...
_same_pattern_different_color_products_partial.html.erb
...:asset_id, :is_sale]).order('price asc').where({:$and => [{:pattern_no => prod_pattern}, {:cate_visible => true}, {:is_sale => false}]})...
        <% fabric_code = Products.where(:old_product_id => prod).only([:fabric_codes])[0] %>
        <% color = FabricCodes.where(:fabric_code => fabric_code['fabric_codes'][0])[0] %>
...:asset_id, :is_sale]).order('price asc').where({:$and => [{:pattern_no => prod_pattern}, {:cate_visible => true}, {:is_sale => false},{:in_s...
        <% fabric_code = Products.where(:old_product_id => prod).only([:fabric_codes])[0] %>
        <% color = FabricCodes.where(:fabric_code => fabric_code['fabric_codes'][0])[0] %>
_same_pattern_products_partial.html.erb
...:asset_id, :is_sale]).order('price asc').where({:$and => [{:pattern_no => prod_pattern}, {:cate_visible => true}, {:coll_visible => true}, {...
_same_pattern_products_partial_v1.html.erb
...:asset_id, :is_sale]).order('price asc').where({:$and => [{:pattern_no => prod_pattern}, {:cate_visible => true},{:is_sale => false}, {:in_s...
best_selling.html.erb
  <% new_arr_carousal = NewArrivalsCarousal.only([:imgs, :foreground_path, :transition_time]).where({:$and => [{:is_visible => true}, {:is_mob_visible => true}, {:case_of => 'best_selling'}]})[0] %>
  <% new_arr_carousal = NewArrivalsCarousal.only([:imgs, :foreground_path, :transition_time]).where({:$and => [{:is_visible => true}, {:is_web_visible => true}, {:case_of => 'best_selling'}]})[0] %>
cart.html.erb
        @salt_media = SaltMedia.order('serial_no asc').where({:is_mob_visible => true})
index.html.erb
    <% @new_arr_carousal = NewArrivalsCarousal.only([:imgs, :transition_time, :links]).where({:$and => [{:is_visible => true}, {:is_mob_visible => true}, {:case_of => 'home_page'}]})[0] %>
...rice, :category]).order('punch_no desc').where(:$and => [{:is_sale => false}, {:cate_visible => true}, {:coll_visible => true}]).limit(16) %...
...:is_mob_visible]).order('serial_no asc').where({:is_mob_visible => true})...
...eground_path, :transition_time, :links]).where({:$and => [{:is_visible => true}, {:is_web_visible => true}, {:case_of => 'home_page'}]})[0] ...
...rice, :category]).order('punch_no desc').where(:$and => [{:is_sale => false}, {:cate_visible => true}, {:coll_visible => true}]).limit(16) %...
...eground_path, :transition_time, :links]).where({:$and => [{:is_visible => true}, {:is_web_visible => true}, {:case_of => 'home_page'}]})[0] ...
... :hover_web_img]).order('serial_no asc').where({:is_web_visible => true})...
                      <% @look_all = Looks.only([:look_id, :img_path, :serial_no, :name]).order('serial_no desc').where(:is_visible => true).limit(10) %>
index_b4_horizontal_scroll.html.erb
...unch_no, :price]).order('punch_no desc').where(:$and => [{:is_sale => false},{:cate_visible => true},{:coll_visible => true}]).limit(16) %>...
...:is_mob_visible]).order('serial_no asc').where({:is_mob_visible => true})...
    @looks = Looks.only([:is_img_left, :look_id, :img_path, :name, :bg_color, :color, :heading, :details, :home_visible]).order('home_sequence_no desc').where({:home_visible => true})
    @preferences = Preference.only([:home_display_name, :home_mob_img, :home_img_alt, :home_url, :home_visible]).order("home_serial_no asc").where({:home_visible => true})
...unch_no, :price]).order('punch_no desc').where(:$and => [{:is_sale => false},{:cate_visible => true},{:coll_visible => true}]).limit(16) %>...
... :hover_web_img]).order('serial_no asc').where({:is_web_visible => true})...
                      <% @look_all = Looks.only([:look_id, :img_path, :serial_no, :name]).order('serial_no desc').where(:is_visible => true).limit(10) %>
index_horizontal_scroll_v1.html.erb
...unch_no, :price]).order('punch_no desc').where(:$and => [{:is_sale => false}, {:cate_visible => true}, {:coll_visible => true}]).limit(16) %...
...:is_mob_visible]).order('serial_no asc').where({:is_mob_visible => true})...
    @looks = Looks.only([:is_img_left, :look_id, :img_path, :name, :bg_color, :color, :heading, :details, :home_visible]).order('home_sequence_no desc').where({:home_visible => true})
    @preferences = Preference.only([:home_display_name, :home_mob_img, :home_img_alt, :home_url, :home_visible]).order("home_serial_no asc").where({:home_visible => true})
...unch_no, :price]).order('punch_no desc').where(:$and => [{:is_sale => false}, {:cate_visible => true}, {:coll_visible => true}]).limit(16) %...
... :hover_web_img]).order('serial_no asc').where({:is_web_visible => true})...
                      <% @look_all = Looks.only([:look_id, :img_path, :serial_no, :name]).order('serial_no desc').where(:is_visible => true).limit(10) %>
index_v1.html.erb
    <% @new_arr_carousal = NewArrivalsCarousal.only([:imgs, :transition_time, :links]).where({:$and => [{:is_visible => true}, {:is_mob_visible => true}, {:case_of => 'home_page'}]})[0] %>
...rice, :category]).order('punch_no desc').where(:$and => [{:is_sale => false}, {:cate_visible => true}, {:coll_visible => true}]).limit(16) %...
      @looks = Looks.only([:is_img_left, :look_id, :img_path, :name, :bg_color, :color, :heading, :details, :home_visible]).order('home_sequence_no desc').where({:home_visible => true})
...me_visible]).order("home_serial_no asc").where({:home_visible => true})...
...reated_at desc').only([:old_product_id]).where(:$and => [{:tags => {'$in' => [pref[:name].to_s]}}, {:is_visible => true}, {:coll_visible => ...
...:is_mob_visible]).order('serial_no asc').where({:is_mob_visible => true})...
      @reviews = Reviews.order('serial_no desc').where({:$and => [{:is_post => true}, {:is_mob_visible => true}]})
...eground_path, :transition_time, :links]).where({:$and => [{:is_visible => true}, {:is_web_visible => true}, {:case_of => 'home_page'}]})[0] ...
      new_arr_carousal = NewArrivalsCarousal.only([:imgs, :transition_time, :links]).where({:$and => [{:is_visible => true}, {:is_mob_visible => true}, {:case_of => 'home_page'}]})[0]
new_arrivals.html.erb
...und_path, :imgs_path, :transition_time]).where({:$and => [{:is_visible => true}, {:is_mob_visible => true}, {:case_of => 'new_arrivals'}]})[...
  <% new_arr_carousal = NewArrivalsCarousal.only([:imgs, :foreground_path, :transition_time]).where({:$and => [{:is_visible => true}, {:is_web_visible => true}, {:case_of => 'new_arrivals'}]})[0] %>
new_index.html.erb
          <%# Products.where({:multi_color => {:$exists => false }}).update_all({:multi_color => false}) %>
...international]).order('created_at desc').where({:$and => [{:created_at => {:$gte => "2019-01-01 00:00:00"}}, {:is_sale => false}, {:multi_co...
...s_international]).order('punch_no desc').where(:$and => [{:is_sale => false}, {:cate_visible => true}, {:coll_visible => true}]).limit(16) %...
...:is_mob_visible]).order('serial_no asc').where({:is_mob_visible => true})...
      @looks = Looks.only([:is_img_left, :look_id, :img_path, :name, :bg_color, :color, :heading, :details, :home_visible]).order('home_sequence_no desc').where({:home_visible => true})
      @preferences = Preference.only([:home_display_name, :home_mob_img, :home_img_alt, :home_url, :home_visible]).order("home_serial_no asc").where({:home_visible => true})
          <%# Products.where({:multi_color => {:$exists => false }}).update_all({:multi_color => false}) %>
...international]).order('created_at desc').where({:$and => [{:created_at => {:$gte => "2019-01-01 00:00:00"}}, {:is_sale => false}, {:category...
...eground_path, :transition_time, :links]).where({:$and => [{:is_visible => true}, {:is_web_visible => true}, {:case_of => 'home_page'}]})[0] ...
...onal, :category]).order('punch_no desc').where(:$and => [{:is_sale => false}, {:cate_visible => true}, {:coll_visible => true}]).limit(16) %...
...eground_path, :transition_time, :links]).where({:$and => [{:is_visible => true}, {:is_web_visible => true}, {:case_of => 'home_page'}]})[0] ...
... :hover_web_img]).order('serial_no asc').where({:is_web_visible => true})...
                        <% @look_all = Looks.only([:look_id, :img_path, :serial_no, :name]).order('serial_no desc').where(:is_visible => true).limit(10) %>
app\views\layouts
_international_strip_mob.html.erb
    active_coupon = CouponCode.where({ :coupon_code => $promo_code_for_strip }).to_a
_international_strip_web.html.erb
    active_coupon = CouponCode.where({ :coupon_code => $promo_code_for_strip }).to_a
application.html.erb
                 mob_nav_data = MobNavBar.where(:nav_id => 'nav_16')[0]
app\views\product
_color_wizard.html.erb
..., :in_stock, :color]).order('price asc').where({:$and => [{:pattern_no => prod_pattern}, {:multi_color_id => multi_color_id}, {:is_sale => f...
          <%# fabric_code = Products.where(:old_product_id => prod).only([:fabric_codes])[0] %>
          <%# color = FabricCodes.where(:fabric_code => fabric_code['fabric_codes'][0])[0] %>
              <% fabric_code = Products.where(:old_product_id => prod['old_product_id']).only([:fabric_codes])[0] %>
              <% color = FabricCodes.where(:fabric_code => fabric_code['fabric_codes'][0])[0] %>
_color_wizard_v1.html.erb
..., :in_stock, :color]).order('price asc').where({:$and => [{:pattern_no => prod_pattern}, {:multi_color_id => multi_color_id}, {:is_sale => f...
          <%# fabric_code = Products.where(:old_product_id => prod).only([:fabric_codes])[0] %>
          <%# color = FabricCodes.where(:fabric_code => fabric_code['fabric_codes'][0])[0] %>
              <% fabric_code = Products.where(:old_product_id => prod['old_product_id']).only([:fabric_codes])[0] %>
              <% color = FabricCodes.where(:fabric_code => fabric_code['fabric_codes'][0])[0] %>
_color_wizard_web.html.erb
..., :in_stock, :color]).order('price asc').where({:$and => [{:pattern_no => prod_pattern}, {:multi_color_id => multi_color_id}, {:is_sale => f...
        <%# fabric_code = Products.where(:old_product_id => prod).only([:fabric_codes])[0] %>
        <%# color = FabricCodes.where(:fabric_code => fabric_code['fabric_codes'][0])[0] %>
                <% fabric_code = Products.where(:old_product_id => prod['old_product_id']).only([:fabric_codes])[0] %>
                <% color = FabricCodes.where(:fabric_code => fabric_code['fabric_codes'][0])[0] %>
_hot_deal_partial.html.erb
...:asset_id,:in_stock]).order('price asc').where({:$and => [{:cate_visible => true}, {:coll_visible => true}, {:is_sale => true}, {:sale_name ...
...et_id, :is_sale]).order('punch_no desc').where({:$and => [{:category => prod_category.to_s.downcase}, {:cate_visible => true}, {:is_visible ...
_prod_customize.html.erb
..., :in_stock, :color]).order('price asc').where({:$and => [{:pattern_no => @ruby_prod['pattern_no'].to_s}, {:multi_color_id => @ruby_prod['mu...
                      <% fabric_code = Products.where(:old_product_id => prod['old_product_id']).only([:fabric_codes])[0] %>
                      <% color = FabricCodes.where(:fabric_code => fabric_code['fabric_codes'][0])[0] %>
_prod_filter_tag.html.erb
  <% filter_master = SaltFilterMenu.where({:$and => [{:master_group => {:$ne => 'base'}}, {:master_group => {:$ne => 'collection'}}, {:master_group => {:$ne => 'collar'}}]}).distinct(:master_group) %>
  <% filter_master = SaltFilterMenu.where({:$and => [{:master_group => {:$ne => 'base'}}, {:master_group => {:$ne => 'collection'}}, {:master_group => {:$ne => 'collar'}}]}).distinct(:master_group) %>
_prod_filter_tag_v1.html.erb
  <% filter_master = SaltFilterMenu.where({:$and => [{:master_group => {:$ne => 'base'}}, {:master_group => {:$ne => 'collection'}}, {:master_group => {:$ne => 'collar'}}]}).distinct(:master_group) %>
  <% filter_master = SaltFilterMenu.where({:$and => [{:master_group => {:$ne => 'base'}}, {:master_group => {:$ne => 'collection'}}, {:master_group => {:$ne => 'collar'}}]}).distinct(:master_group) %>
_product_icon.html.erb
  <% prod_details = Products.only([:old_product_id,:product_icons]).where(:old_product_id => product_id).to_a[0] %>
_product_icon_v1.html.erb
  <% prod_details = Products.only([:old_product_id,:product_icons, :fabric_codes]).where(:old_product_id => product_id).to_a[0] %>
_product_rating_view.html.erb
  prod_rating = RatingReview.only([:fabric_rating, :fit_rating]).where({:product_id => product_id}).to_a
description.html.erb
..., :in_stock, :color]).order('price asc').where({:$and => [{:pattern_no => @ruby_prod['pattern_no']}, {:multi_color_id => @ruby_prod['multi_c...
                    <% fabric_code = Products.where(:old_product_id => prod['old_product_id']).only([:fabric_codes])[0] %>
                    <% color = FabricCodes.where(:fabric_code => fabric_code['fabric_codes'][0])[0] %>
    # Products.where({}).update_all({:font_color => "#000000"})
    gets_font_color = Products.where({:old_product_id => @params.to_s}).to_a
..., :in_stock, :color]).order('price asc').where({:$and => [{:pattern_no => @ruby_prod['pattern_no']}, {:multi_color_id => @ruby_prod['multi_c...
                          <% fabric_code = Products.where(:old_product_id => prod['old_product_id']).only([:fabric_codes])[0] %>
                          <% color = FabricCodes.where(:fabric_code => fabric_code['fabric_codes'][0])[0] %>
..., :in_stock, :color]).order('price asc').where({:$and => [{:pattern_no => @ruby_prod['pattern_no']}, {:multi_color_id => @ruby_prod['pattern...
                          <% fabric_code = Products.where(:old_product_id => prod['old_product_id']).only([:fabric_codes])[0] %>
                          <% color = FabricCodes.where(:fabric_code => fabric_code['fabric_codes'][0])[0] %>
..., :in_stock, :color]).order('price asc').where({:$and => [{:pattern_no => @ruby_prod['pattern_no']}, {:multi_color_id => @ruby_prod['multi_c...
                                  <% fabric_code = Products.where(:old_product_id => prod['old_product_id']).only([:fabric_codes])[0] %>
                                  <% color = FabricCodes.where(:fabric_code => fabric_code['fabric_codes'][0])[0] %>
..., :in_stock, :color]).order('price asc').where({:$and => [{:pattern_no => @ruby_prod['pattern_no']}, {:multi_color_id => @ruby_prod['multi_c...
                                  <% fabric_code = Products.where(:old_product_id => prod['old_product_id']).only([:fabric_codes])[0] %>
                                  <% color = FabricCodes.where(:fabric_code => fabric_code['fabric_codes'][0])[0] %>
description_html_erb_v1
..., :in_stock, :color]).order('price asc').where({:$and => [{:pattern_no => @ruby_prod['pattern_no']}, {:is_sale => false}, {:multi_color => t...
                      <% fabric_code = Products.where(:old_product_id => prod['old_product_id']).only([:fabric_codes])[0] %>
                      <% color = FabricCodes.where(:fabric_code => fabric_code['fabric_codes'][0])[0] %>
    # Products.where({}).update_all({:font_color => "#000000"})
    gets_font_color = Products.where({:old_product_id => @params.to_s}).to_a
description_v1.html.erb
..., :in_stock, :color]).order('price asc').where({:$and => [{:pattern_no => @ruby_prod['pattern_no']}, {:multi_color_id => @ruby_prod['multi_c...
                    <% fabric_code = Products.where(:old_product_id => prod['old_product_id']).only([:fabric_codes])[0] %>
                    <% color = FabricCodes.where(:fabric_code => fabric_code['fabric_codes'][0])[0] %>
...rice, :category]).order('punch_no desc').where(:$and => [{:is_sale => false}, {:cate_visible => true}, {:coll_visible => true}, {:in_stock =...
    # Products.where({}).update_all({:font_color => "#000000"})
    gets_font_color = Products.where({:old_product_id => @params.to_s}).to_a
..., :in_stock, :color]).order('price asc').where({:$and => [{:pattern_no => @ruby_prod['pattern_no']}, {:multi_color_id => @ruby_prod['multi_c...
                          <% fabric_code = Products.where(:old_product_id => prod['old_product_id']).only([:fabric_codes])[0] %>
                          <% color = FabricCodes.where(:fabric_code => fabric_code['fabric_codes'][0])[0] %>
..., :in_stock, :color]).order('price asc').where({:$and => [{:pattern_no => @ruby_prod['pattern_no']}, {:multi_color_id => @ruby_prod['pattern...
                          <% fabric_code = Products.where(:old_product_id => prod['old_product_id']).only([:fabric_codes])[0] %>
                          <% color = FabricCodes.where(:fabric_code => fabric_code['fabric_codes'][0])[0] %>
..., :in_stock, :color]).order('price asc').where({:$and => [{:pattern_no => @ruby_prod['pattern_no']}, {:multi_color_id => @ruby_prod['multi_c...
                                  <% fabric_code = Products.where(:old_product_id => prod['old_product_id']).only([:fabric_codes])[0] %>
                                  <% color = FabricCodes.where(:fabric_code => fabric_code['fabric_codes'][0])[0] %>
..., :in_stock, :color]).order('price asc').where({:$and => [{:pattern_no => @ruby_prod['pattern_no']}, {:multi_color_id => @ruby_prod['multi_c...
                                  <% fabric_code = Products.where(:old_product_id => prod['old_product_id']).only([:fabric_codes])[0] %>
                                  <% color = FabricCodes.where(:fabric_code => fabric_code['fabric_codes'][0])[0] %>
app\views\shop
categories.html.erb
      @cate_prods = Products.order("created_at desc").where({:$and => [{:category => @params.to_s}, {:is_visible => true}, {:cate_visible => true}, {:is_sale => false}]}).to_a
      @cate_prods = Products.order("created_at desc").where({:$and => [{:is_visible => true}, {:cate_visible => true}, {:is_sale => false}]}).to_a
categories_v1.html.erb
        @cate_prods = Products.order(@sorted_by).where({ :$and => @filter_query }).to_a
        @cate_prods = Products.order(@sorted_by).where({ :$and => @filter_query }).limit(8).to_a
        @cate_prods = Products.order(@sorted_by).where({ :$and => @filter_query }).to_a
        @cate_prods = Products.order(@sorted_by).where({ :$and => [{ :category => @params.to_s }, { :is_visible => true }, { :cate_visible => true }, { :is_sale => false }] }).limit(5).to_a
        @cate_prods_2 = Products.order('created_at asc').where({ :$and => [{ :category => @params.to_s }, { :is_visible => true }, { :cate_visible => true }, { :is_sale => false }] }).limit(5).to_a
        @cate_prods = Products.order(@sorted_by).where({ :$and => [{ :is_visible => true }, { :cate_visible => true }, { :is_sale => false }] }).to_a
        @cate_prods_2 = Products.order('created_at asc').where({ :$and => [{ :is_visible => true }, { :cate_visible => true }, { :is_sale => false }] }).to_a
app\views\users
cart.html.erb
        @salt_media = SaltMedia.order('serial_no asc').where({:is_mob_visible => true})
usercart.html.erb
      @salt_media = SaltMedia.order('serial_no asc').where({:is_mob_visible => true})